// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RgCms.Api.Data;

#nullable disable

namespace RgCms.Api.Migrations
{
    [DbContext(typeof(RgCmsContext))]
    partial class RgCmsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Foto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PontoDeInteresseID")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("PontoDeInteresseID");

                    b.ToTable("Fotos");
                });

            modelBuilder.Entity("RedeSocial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Nome")
                        .HasColumnType("int");

                    b.Property<int>("PontoDeInteresseID")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PontoDeInteresseID");

                    b.ToTable("RedesSociais");
                });

            modelBuilder.Entity("RgCms.Api.Models.PontoDeInteresse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("Latitude")
                        .HasColumnType("float");

                    b.Property<float>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("varchar(160)");

                    b.Property<int>("SubCategoria")
                        .HasColumnType("int");

                    b.Property<long>("Telefone")
                        .HasColumnType("bigint");

                    b.Property<long>("TelefoneFixo")
                        .HasColumnType("bigint");

                    b.Property<bool>("WhatsApp")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("PontosDeInteresse");
                });

            modelBuilder.Entity("Foto", b =>
                {
                    b.HasOne("RgCms.Api.Models.PontoDeInteresse", "PontoDeInteresse")
                        .WithMany("Fotos")
                        .HasForeignKey("PontoDeInteresseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PontoDeInteresse");
                });

            modelBuilder.Entity("RedeSocial", b =>
                {
                    b.HasOne("RgCms.Api.Models.PontoDeInteresse", "PontoDeInteresse")
                        .WithMany("RedesSociais")
                        .HasForeignKey("PontoDeInteresseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PontoDeInteresse");
                });

            modelBuilder.Entity("RgCms.Api.Models.PontoDeInteresse", b =>
                {
                    b.Navigation("Fotos");

                    b.Navigation("RedesSociais");
                });
#pragma warning restore 612, 618
        }
    }
}
